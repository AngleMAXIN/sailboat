{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","Date","StockSet","StockName","PoolSize","Rule","dataFetch","setDataFetch","useEffect","a","fetch","then","response","json","catch","error","code","msg","toString","data","message","style","display","justifyContent","alignItems","flexDirection","minHeight","background","padding","width","Title","Paragraph","gutter","map","item","index","fontSize","lineHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAuBA,IA0CeA,EA1CH,WAAO,IAAD,EACkBC,mBAAmB,CAACC,KAAM,IAAKC,SAAU,GAAIC,UAAW,GAAIC,SAAU,EAAGC,KAAM,MADjG,mBACTC,EADS,KACEC,EADF,KAERN,EAA8CK,EAA9CL,KAAMC,EAAwCI,EAAxCJ,SAAUC,EAA8BG,EAA9BH,UAAWC,EAAmBE,EAAnBF,SAAUC,EAASC,EAATD,KAU7C,OARAG,qBAAU,WACR,sBAAC,kCAAAC,EAAA,sEAvBIC,MAAM,sBAAsBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQC,OAAM,SAAAC,GAAK,MAAK,CAACC,KAAM,IAAKC,IAAKF,EAAMG,eAuBzG,gBACSF,EADT,EACSA,KAAMG,EADf,EACeA,KAAMF,EADrB,EACqBA,IACV,OAATD,GAAiBG,EAAQZ,EAAaY,GAAQC,IAAQL,MAAME,GAF9D,0CAAD,KAKC,IAGD,yBAAKI,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,cAAe,SAAUC,UAAW,QAASC,WAAY,uCAAwCC,QAAS,KACtL,yBAAKP,MAAO,CAACQ,MAAO,QAClB,kBAAC,IAAD,KACE,kBAAC,IAAWC,MAAZ,2BACA,kBAAC,IAAWC,UAAZ,0BAA0B9B,GAC1B,kBAAC,IAAW8B,UAAZ,0BAA0B3B,GAC1B,kBAAC,IAAW2B,UAAZ,0BAA0B1B,KAI9B,kBAAC,IAAD,CAAMgB,MAAO,CAACQ,MAAO,MAAOF,WAAY,YACtC,kBAAC,IAAD,CAAMN,MAAO,CAACQ,MAAO,SACnB,kBAAC,IAAD,CAAKG,OAAQ,CAAC,GAAI,KAEd9B,EAAS+B,KAAI,SAACC,EAAMC,GAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,MAAO,CAACO,QAAS,GAAIQ,SAAU,GAAIC,WAAY,MAAOH,EAAK,6BAAM/B,EAAUgC,a,OChDpGG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.83e946d5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography, Card, Tag, Row, Col, message, Space } from 'antd';\nimport dataMock from './data.json';\n\nfunction request(): Promise<ResponseType> {\n  return fetch('/api.v1/stock-pool').then(response => response.json()).catch(error => ({code: 500, msg: error.toString()}))\n  // return fetch('http://62.234.123.212:10001/api/BusinessCate').then(response => dataMock).catch(error => ({code: 500, msg: error.toString()}))\n}\n\ninterface ResponseType {\n  code: number;\n  data?: DataType;\n  msg: string;\n}\n\ninterface DataType {\n  Date: string;\n  StockSet: Array<string>;\n  StockName: Array<string>;\n  PoolSize: number;\n  Rule: string;\n}\n\nconst App = () => {\n  const [dataFetch, setDataFetch] = useState<DataType>({Date: '-', StockSet: [], StockName: [], PoolSize: 0, Rule: '-'})\n  const { Date, StockSet, StockName, PoolSize, Rule } = dataFetch\n\n  useEffect(() => {\n    (async () => {\n      const { code, data, msg } = await request();\n      (code === 1001 && data) ? setDataFetch(data) : message.error(msg)\n  })();\n    \n  }, [])\n\n  return (\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', minHeight: '100vh', background: 'linear-gradient(225deg,#fff,#f0f5ff)', padding: 48}}>\n      <div style={{width: '70%'}}>\n        <Typography>\n          <Typography.Title>股票池</Typography.Title>\n          <Typography.Paragraph>时间：{Date}</Typography.Paragraph>\n          <Typography.Paragraph>数量：{PoolSize}</Typography.Paragraph>\n          <Typography.Paragraph>规则：{Rule}</Typography.Paragraph>\n        </Typography>\n      </div>\n      \n      <Card style={{width: '70%', background: '#DEE6F5'}}>\n        <Card style={{width: '100%'}}>\n          <Row gutter={[16, 24]}>\n            {\n              StockSet.map((item ,index) => {\n                return(\n                  <Col>\n                    <Tag style={{padding: 24, fontSize: 16, lineHeight: '2'}}>{item}<br/>{StockName[index]}</Tag>\n                  </Col>\n                );\n              })\n            }\n          </Row>\n        </Card>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}