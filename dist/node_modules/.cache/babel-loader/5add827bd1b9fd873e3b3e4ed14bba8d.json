{"ast":null,"code":"var _jsxFileName = \"/home/maxin/self/sailboat/dist/src/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Card, Tag, Row, Col, message } from 'antd';\n\nfunction request() {\n  return fetch('http://127.0.0.1:8081/api.v1/stock-pool').then(response => response.json()).catch(error => ({\n    code: 500,\n    msg: error.toString()\n  })); // return fetch('http://62.234.123.212:10001/api/BusinessCate').then(response => dataMock).catch(error => ({code: 500, msg: error.toString()}))\n}\n\nconst App = () => {\n  const [dataFetch, setDataFetch] = useState({\n    Date: '-',\n    StockSet: [],\n    StockName: [],\n    PoolSize: 0,\n    Rule: '-'\n  });\n  const {\n    Date,\n    StockSet,\n    StockName,\n    PoolSize,\n    Rule\n  } = dataFetch;\n  useEffect(() => {\n    (async () => {\n      const {\n        code,\n        data,\n        msg\n      } = await request();\n      code === 1001 && data ? setDataFetch(data) : message.error(msg);\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n      minHeight: '100vh',\n      background: 'linear-gradient(225deg,#fff,#f0f5ff)',\n      padding: 48\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"\\u80A1\\u7968\\u6C60\"), /*#__PURE__*/React.createElement(Typography.Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"\\u65F6\\u95F4\\uFF1A\", Date), /*#__PURE__*/React.createElement(Typography.Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"\\u6570\\u91CF\\uFF1A\", PoolSize), /*#__PURE__*/React.createElement(Typography.Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"\\u89C4\\u5219\\uFF1A\", Rule))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '80%',\n      background: '#DEE6F5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, StockSet.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      style: {\n        padding: 24,\n        fontSize: 16,\n        lineHeight: '2'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, item, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 85\n      }\n    }), StockName[index]));\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/maxin/self/sailboat/dist/src/App.tsx"],"names":["React","useEffect","useState","Typography","Card","Tag","Row","Col","message","request","fetch","then","response","json","catch","error","code","msg","toString","App","dataFetch","setDataFetch","Date","StockSet","StockName","PoolSize","Rule","data","display","justifyContent","alignItems","flexDirection","minHeight","background","padding","width","map","item","index","fontSize","lineHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography, Card, Tag, Row, Col, message, Space } from 'antd';\nimport dataMock from './data.json';\n\nfunction request(): Promise<ResponseType> {\n  return fetch('http://127.0.0.1:8081/api.v1/stock-pool').then(response => response.json()).catch(error => ({code: 500, msg: error.toString()}))\n  // return fetch('http://62.234.123.212:10001/api/BusinessCate').then(response => dataMock).catch(error => ({code: 500, msg: error.toString()}))\n}\n\ninterface ResponseType {\n  code: number;\n  data?: DataType;\n  msg: string;\n}\n\ninterface DataType {\n  Date: string;\n  StockSet: Array<string>;\n  StockName: Array<string>;\n  PoolSize: number;\n  Rule: string;\n}\n\nconst App = () => {\n  const [dataFetch, setDataFetch] = useState<DataType>({Date: '-', StockSet: [], StockName: [], PoolSize: 0, Rule: '-'})\n  const { Date, StockSet, StockName, PoolSize, Rule } = dataFetch\n\n  useEffect(() => {\n    (async () => {\n      const { code, data, msg } = await request();\n      (code === 1001 && data) ? setDataFetch(data) : message.error(msg)\n  })();\n    \n  }, [])\n\n  return (\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', minHeight: '100vh', background: 'linear-gradient(225deg,#fff,#f0f5ff)', padding: 48}}>\n      <div style={{width: '70%'}}>\n        <Typography>\n          <Typography.Title>股票池</Typography.Title>\n          <Typography.Paragraph>时间：{Date}</Typography.Paragraph>\n          <Typography.Paragraph>数量：{PoolSize}</Typography.Paragraph>\n          <Typography.Paragraph>规则：{Rule}</Typography.Paragraph>\n        </Typography>\n      </div>\n      \n      <Card style={{width: '80%', background: '#DEE6F5'}}>\n        <Card style={{width: '100%'}}>\n          <Row gutter={[16, 24]}>\n            {\n              StockSet.map((item ,index) => {\n                return(\n                  <Col>\n                    <Tag style={{padding: 24, fontSize: 16, lineHeight: '2'}}>{item}<br/>{StockName[index]}</Tag>\n                  </Col>\n                );\n              })\n            }\n          </Row>\n        </Card>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}