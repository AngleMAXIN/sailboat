{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nexport default function SliderTooltip(props) {\n  var visible = props.visible;\n  var tooltipRef = React.useRef(null);\n  var rafRef = React.useRef(null);\n\n  function cancelKeepAlign() {\n    window.cancelAnimationFrame(rafRef.current);\n    rafRef.current = null;\n  }\n\n  function keepAlign() {\n    if (rafRef.current !== null) {\n      return;\n    }\n\n    rafRef.current = window.requestAnimationFrame(function () {\n      if (tooltipRef.current && tooltipRef.current.tooltip) {\n        tooltipRef.current.tooltip.forcePopupAlign();\n      }\n\n      rafRef.current = null;\n      keepAlign();\n    });\n  }\n\n  React.useEffect(function () {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    ref: tooltipRef\n  }, props));\n}","map":{"version":3,"sources":["/home/maxin/self/sailboat/dist/node_modules/antd/es/slider/SliderTooltip.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Tooltip","SliderTooltip","props","visible","tooltipRef","useRef","rafRef","cancelKeepAlign","window","cancelAnimationFrame","current","keepAlign","requestAnimationFrame","tooltip","forcePopupAlign","useEffect","createElement","ref"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AACA,MAAIC,UAAU,GAAGL,KAAK,CAACM,MAAN,CAAa,IAAb,CAAjB;AACA,MAAIC,MAAM,GAAGP,KAAK,CAACM,MAAN,CAAa,IAAb,CAAb;;AAEA,WAASE,eAAT,GAA2B;AACzBC,IAAAA,MAAM,CAACC,oBAAP,CAA4BH,MAAM,CAACI,OAAnC;AACAJ,IAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACD;;AAED,WAASC,SAAT,GAAqB;AACnB,QAAIL,MAAM,CAACI,OAAP,KAAmB,IAAvB,EAA6B;AAC3B;AACD;;AAEDJ,IAAAA,MAAM,CAACI,OAAP,GAAiBF,MAAM,CAACI,qBAAP,CAA6B,YAAY;AACxD,UAAIR,UAAU,CAACM,OAAX,IAAsBN,UAAU,CAACM,OAAX,CAAmBG,OAA7C,EAAsD;AACpDT,QAAAA,UAAU,CAACM,OAAX,CAAmBG,OAAnB,CAA2BC,eAA3B;AACD;;AAEDR,MAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACAC,MAAAA,SAAS;AACV,KAPgB,CAAjB;AAQD;;AAEDZ,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAY;AAC1B,QAAIZ,OAAJ,EAAa;AACXQ,MAAAA,SAAS;AACV,KAFD,MAEO;AACLJ,MAAAA,eAAe;AAChB;;AAED,WAAOA,eAAP;AACD,GARD,EAQG,CAACJ,OAAD,CARH;AASA,SAAO,aAAaJ,KAAK,CAACiB,aAAN,CAAoBhB,OAApB,EAA6Bd,QAAQ,CAAC;AACxD+B,IAAAA,GAAG,EAAEb;AADmD,GAAD,EAEtDF,KAFsD,CAArC,CAApB;AAGD","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nexport default function SliderTooltip(props) {\n  var visible = props.visible;\n  var tooltipRef = React.useRef(null);\n  var rafRef = React.useRef(null);\n\n  function cancelKeepAlign() {\n    window.cancelAnimationFrame(rafRef.current);\n    rafRef.current = null;\n  }\n\n  function keepAlign() {\n    if (rafRef.current !== null) {\n      return;\n    }\n\n    rafRef.current = window.requestAnimationFrame(function () {\n      if (tooltipRef.current && tooltipRef.current.tooltip) {\n        tooltipRef.current.tooltip.forcePopupAlign();\n      }\n\n      rafRef.current = null;\n      keepAlign();\n    });\n  }\n\n  React.useEffect(function () {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    ref: tooltipRef\n  }, props));\n}"]},"metadata":{},"sourceType":"module"}