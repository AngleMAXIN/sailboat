{"ast":null,"code":"function _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport * as React from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning';\nvar EMPTY_LIST = []; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerSelectedKeys = _React$useState2[0],\n      setInnerSelectedKeys = _React$useState2[1];\n\n  var mergedSelectedKeys = selectedRowKeys || innerSelectedKeys || EMPTY_LIST;\n  var mergedSelectedKeySet = React.useMemo(function () {\n    var keys = selectionType === 'radio' ? mergedSelectedKeys.slice(0, 1) : mergedSelectedKeys;\n    return new Set(keys);\n  }, [mergedSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastSelectedKey = _React$useState4[0],\n      setLastSelectedKey = _React$useState4[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setInnerSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = React.useCallback(function (keys) {\n    setInnerSelectedKeys(keys);\n    var records = keys.map(function (key) {\n      return getRecordByKey(key);\n    });\n\n    if (onSelectionChange) {\n      onSelectionChange(keys, records);\n    }\n  }, [setInnerSelectedKeys, getRecordByKey, onSelectionChange]); // Trigger single `onSelect` event\n\n  var triggerSingleSelection = React.useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = React.useMemo(function () {\n    if (!selections) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(mergedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, mergedSelectedKeySet, pageData, getRowKey]);\n  var transformColumns = React.useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Get flatten data\n\n\n    var flattedData = flattenData(pageData, childrenColumnName); // Support selection\n\n    var keySet = new Set(mergedSelectedKeySet); // Get all checkbox props\n\n    var checkboxPropsMap = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      checkboxPropsMap.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        warning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    }); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          keySet.add(key);\n          changeKeys.push(key);\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                if (checked) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n\n                triggerSingleSelection(key, !checked, Array.from(keySet), nativeEvent);\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = {\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    };\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, pageData, rowSelection, innerSelectedKeys, mergedSelectedKeys, selectionColWidth, mergedSelections, expandType, lastSelectedKey, onSelectMultiple, triggerSingleSelection]);\n  return [transformColumns, mergedSelectedKeySet];\n}","map":{"version":3,"sources":["/home/maxin/self/sailboat/dist/node_modules/antd/es/table/hooks/useSelection.js"],"names":["_toArray","arr","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_slicedToArray","_iterableToArrayLimit","TypeError","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","iter","len","arr2","React","DownOutlined","Checkbox","Dropdown","Menu","Radio","warning","EMPTY_LIST","SELECTION_ALL","SELECTION_INVERT","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","concat","useSelection","rowSelection","config","_ref","selectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","_React$useState","useState","_React$useState2","innerSelectedKeys","setInnerSelectedKeys","mergedSelectedKeys","mergedSelectedKeySet","useMemo","keys","Set","_React$useState3","_React$useState4","lastSelectedKey","setLastSelectedKey","useEffect","setSelectedKeys","useCallback","records","map","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","index","selectInvert","keySet","has","add","transformColumns","columns","flattedData","checkboxPropsMap","Map","checkboxProps","set","process","env","NODE_ENV","recordKeys","filter","get","disabled","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabled","checked","indeterminate","_","node","e","stopPropagation","nativeEvent","_ref2","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","_columns","expandColumn","restColumns","selectionFixed"],"mappings":"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","sourcesContent":["function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning';\nvar EMPTY_LIST = []; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerSelectedKeys = _React$useState2[0],\n      setInnerSelectedKeys = _React$useState2[1];\n\n  var mergedSelectedKeys = selectedRowKeys || innerSelectedKeys || EMPTY_LIST;\n  var mergedSelectedKeySet = React.useMemo(function () {\n    var keys = selectionType === 'radio' ? mergedSelectedKeys.slice(0, 1) : mergedSelectedKeys;\n    return new Set(keys);\n  }, [mergedSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastSelectedKey = _React$useState4[0],\n      setLastSelectedKey = _React$useState4[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setInnerSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = React.useCallback(function (keys) {\n    setInnerSelectedKeys(keys);\n    var records = keys.map(function (key) {\n      return getRecordByKey(key);\n    });\n\n    if (onSelectionChange) {\n      onSelectionChange(keys, records);\n    }\n  }, [setInnerSelectedKeys, getRecordByKey, onSelectionChange]); // Trigger single `onSelect` event\n\n  var triggerSingleSelection = React.useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = React.useMemo(function () {\n    if (!selections) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(mergedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, mergedSelectedKeySet, pageData, getRowKey]);\n  var transformColumns = React.useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Get flatten data\n\n\n    var flattedData = flattenData(pageData, childrenColumnName); // Support selection\n\n    var keySet = new Set(mergedSelectedKeySet); // Get all checkbox props\n\n    var checkboxPropsMap = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      checkboxPropsMap.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        warning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    }); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          keySet.add(key);\n          changeKeys.push(key);\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                if (checked) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n\n                triggerSingleSelection(key, !checked, Array.from(keySet), nativeEvent);\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = {\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    };\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, pageData, rowSelection, innerSelectedKeys, mergedSelectedKeys, selectionColWidth, mergedSelections, expandType, lastSelectedKey, onSelectMultiple, triggerSingleSelection]);\n  return [transformColumns, mergedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"module"}